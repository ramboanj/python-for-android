diff --git a/.gitignore b/.gitignore
index 118d33ef..d7c2618a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -15,4 +15,4 @@ docs/docs/cache/
 docs/docs/git-logs.xml
 docs/docs/python/classes.txt
 docs/docs/python/functions.txt
-docs/docs/python/constants.txt
+
diff --git a/setup.py b/setup.py
index 8e433098..e750fcf4 100644
--- a/setup.py
+++ b/setup.py
@@ -43,6 +43,14 @@ from setuptools import setup, Extension
 from setuptools.command.build_ext import build_ext
 from distutils.version import LooseVersion
 
+# Example:CMAKE_LIBRARY_OUTPUT_DIRECTORY=#os.path.abspath("build/libdlib")
+# "CMAKE_TEMP_OUTPUT_DIRECTORY"os.path.abspath("build/tempdlib")
+switcher={
+    "PYTHON_EXECUTABLE":sys.executable,
+    "CMAKE_LIBRARY_OUTPUT_DIRECTORY":None,
+    "CMAKE_TEMP_OUTPUT_DIRECTORY":None
+}
+
 
 def get_extra_cmake_options():
     """read --clean, --no, --set, --compiler-flags, and -G options from the command line and add them as cmake switches.
@@ -63,7 +71,15 @@ def get_extra_cmake_options():
             _cmake_extra_options.append('-D{arg}=no'.format(arg=arg.strip()))
         elif opt_key == 'set':
             _cmake_extra_options.append('-D{arg}'.format(arg=arg.strip()))
+        elif opt_key == 'opt':
+            optPy=arg.strip()
+            print("OPTION=",optPy)
+            separate=optPy.split("=")
+            switcher[separate[0]]=' '.join(separate[1:])
+            print(separate[0],"=",' '.join(separate[1:]))
+
 
+            
         if opt_key:
             sys.argv.remove(arg)
             opt_key = None
@@ -78,7 +94,7 @@ def get_extra_cmake_options():
             print("The --yes options to dlib's setup.py don't do anything since all these options ")
             print("are on by default.  So --yes has been removed.  Do not give it to setup.py.")
             sys.exit(1)
-        if arg in ['--no', '--set', '--compiler-flags']:
+        if arg in ['--no', '--set','--opt','--compiler-flags']:
             opt_key = arg[2:].lower()
             sys.argv.remove(arg)
             continue
@@ -134,10 +150,14 @@ class CMakeBuild(build_ext):
             self.build_extension(ext)
 
     def build_extension(self, ext):
-        extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.name)))
+        extdir = switcher["CMAKE_LIBRARY_OUTPUT_DIRECTORY"]
+        if (extdir==None):
+                extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.name)))
+        print("EXTDIR=",extdir)
+        print("Execute with",switcher["PYTHON_EXECUTABLE"]);
 
         cmake_args = ['-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=' + extdir,
-                      '-DPYTHON_EXECUTABLE=' + sys.executable]
+                      '-DPYTHON_EXECUTABLE=' +  switcher["PYTHON_EXECUTABLE"]]
 
         cmake_args += cmake_extra_options 
 
@@ -155,7 +175,10 @@ class CMakeBuild(build_ext):
             # Do a parallel build
             build_args += ['--', '-j'+str(num_available_cpu_cores(2))]
 
-        build_folder = os.path.abspath(self.build_temp)
+        build_folder = switcher["CMAKE_TEMP_OUTPUT_DIRECTORY"]
+        if (build_folder==None):
+            build_folder = os.path.abspath(self.build_temp)
+        print("WRITING in",build_folder)
 
         if clean_build_folder:
             rmtree(build_folder)
